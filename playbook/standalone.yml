---
- name: install PilotGo-ELK platform
  hosts: standalone
  become: yes
  become_user: root

  tasks: 
  - name: install java-11-openjdk-devel for elasticsearch
    dnf: 
      name: java-11-openjdk-devel*
      state: present
  - name: get elasticsearch from official website
    shell: wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.17.16-linux-x86_64.tar.gz --no-check-certificate
    args: 
      chdir: /root/
    when: arch == x86_64
  - name: unzip tar.gz
    shell: tar -xzvf elasticsearch-7.17.16-linux-x86_64.tar.gz -C /opt
    args: 
      chdir: /root/
    when: arch == x86_64
  - name: get elasticsearch from official website
    shell: wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.17.16-linux-aarch64.tar.gz --no-check-certificate
    args: 
      chdir: /root/
    when: arch == aarch64
  - name: unzip tar.gz
    shell: tar -xzvf elasticsearch-7.17.16-linux-aarch64.tar.gz -C /opt
    args: 
      chdir: /root/
    when: arch == aarch64
  - name: add elastic user
    shell: groupadd elastic && useradd elastic -g elastic
  - name: chown /opt/elasticsearch-7.17.16/
    shell: chown -R elastic:elastic /opt/elasticsearch-7.17.16/
  - name: change es config
    template: src=templates/elasticsearch/elasticsearch.yml.j2 dest=/opt/elasticsearch-7.17.16/config/elasticsearch.yml
  - name: change jvms
    lineinfile: 
      path: /opt/elasticsearch-7.17.16/config/jvm.options
      regexp: '^#?-Xms*'
      line: '-Xms4g'
      backrefs: yes
  - name: change jvmx
    lineinfile: 
      path: /opt/elasticsearch-7.17.16/config/jvm.options
      regexp: '^#?-Xmx*'
      line: '-Xmx4g'
      backrefs: yes
  - name: start  elasticsearch
    shell: nohup /opt/elasticsearch-7.17.16/bin/elasticsearch -d &
  - name: get kibana from official website 
    shell: wget https://artifacts.elastic.co/downloads/kibana/kibana-7.17.16-linux-x86_64.tar.gz --no-check-certificate
    args: 
      chdir: /root/
    when: arch == x86_64
  - name: unzip tar.gz
    shell: tar -xzvf kibana-7.17.16-linux-x86_64.tar.gz -C /opt
    args: 
      chdir: /root/
    when: arch == x86_64
  - name: get elasticsearch from official website
    shell: wget https://artifacts.elastic.co/downloads/kibana/kibana-7.17.16-linux-aarch64.tar.gz --no-check-certificate
    args: 
      chdir: /root/
    when: arch == aarch64
  - name: unzip tar.gz
    shell: tar -xzvf kibana-7.17.16-linux-aarch64.tar.gz -C /opt
    args: 
      chdir: /root/
    when: arch == aarch64
  - name: start kibana
    shell: nohup /opt/kibana-7.17.16/bin/kibana --allow-root & 
  - name: install docker
    dnf: 
      name: docker
      state: present
  - name: pull fleet for kibana
    shell: docker pull docker.elastic.co/package-registry/distribution:7.17.23
  - name: Save the fleet Docker image locally
    shell: docker save -o package-registry-7.17.23.tar docker.elastic.co/package-registry/distribution:7.17.23
  - name: Transfer the image to the air-gapped environment and load it
    shell: docker load -i package-registry-7.17.23.tar
  - name: Run the Elastic Package Registry
    shell: docker run -it -p 8080:8080 docker.elastic.co/package-registry/distribution:7.17.23
  - name: change kibana config for fleet
    lineinfile:  
      path: /opt/kibana-7.17.16/config/kibana.yml 
      regexp: '^#?xpack\.fleet\.registryUrl:\s*'  
      line: 'xpack.fleet.registryUrl: http://127.0.0.1:8080'  
      backup: yes
  - name: stop kibana
    shell: kill -9 $(ps -ef | grep "nohup /opt/kibana-7.17.16/bin/kibana --allow-root &" | grep -v grep | awk '{print $2}')
  - name: start kibana
    shell: nohup /opt/kibana-7.17.16/bin/kibana --allow-root &
  - name: get fliebeat from official website
    shell: wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.17.16-linux-x86_64.tar.gz --no-check-certificate
    args: 
      chdir: /root/
    when: arch == x86_64
  - name: unzip tar.gz
    shell: tar -xzvf filebeat-7.17.16-linux-x86_64.tar.gz -C /opt
    args: 
      chdir: /root/
    when: arch == x86_64
  - name: get filebeat from official website
    shell: wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.17.16-linux-arm64.tar.gz --no-check-certificate
    args: 
      chdir: /root/
    when: arch == aarch64
  - name: unzip tar.gz
    shell: tar -xzvf filebeat-7.17.16-linux-arm64.tar.gz -C /opt
    args: 
      chdir: /root/
    when: arch == aarch64
  - name: start filebeat
    shell: nobup /opt/filebeat-7.17.16/filebeat -c /opt/filebeat-7.17.16/filebeat.yml &